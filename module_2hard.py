def find_pairs(n):
    pairs = []
    # Перебираем все уникальные пары чисел от 1 до 20
    for i in range(1, 21):
        for j in range(i + 1, 21):  # j начинается с i+1, чтобы избежать повторений и перестановок
            if (i + j) % n == 0:
                pairs.append(f"{i}{j}")
    return "".join(pairs)

# Примеры использования функции и вывод результата
results = {}
for n in range(3, 21):
    result = find_pairs(n)
    results[n] = result
    print(f"{n} - {result}")

# Для проверки конкретных значений
expected_results = {
    3: "12",
    4: "13",
    5: "1423",
    6: "121524",
    7: "162534",
    8: "13172635",
    9: "1218273645",
    10: "141923283746",
    11: "11029384756",
    12: "12131511124210394857",
    13: "112211310495867",
    14: "1611325212343114105968",
    15: "1214114232133124115106978",
    16: "1317115262143531341251161079",
    17: "11621531441351261171089",
    18: "12151811724272163631545414513612711810",
    19: "118217316415514613712811910",
    20: "13141911923282183731746416515614713812911"
}

# Проверка совпадений с ожидаемыми результатами
for n, expected in expected_results.items():
    if results[n] == expected:
        print(f"Test passed for n={n}")
    else:
        print(f"Test failed for n={n}: got {results[n]}, expected {expected}")

